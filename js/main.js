// Generated by CoffeeScript 1.6.2
var SSection, h, onFrame, section, windowHeight;

Path.prototype.setWidth = function(width) {
  this.segments[3].point.x = this.segments[0].point.x + width;
  return this.segments[2].point.x = this.segments[1].point.x + width;
};

Path.prototype.setHeight = function(height) {
  this.segments[1].point.y = this.segments[0].point.y + height;
  return this.segments[2].point.y = this.segments[3].point.y + height;
};

Path.prototype.reset = function() {
  this.setWidth(0);
  this.setHeight(0);
  return this.smooth();
};

Path.prototype.copyPath = function(path) {
  var i, _i, _ref, _results;

  _results = [];
  for (i = _i = _ref = path.segments.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {
    _results.push(this.add(new Point(path.segments[i].point)));
  }
  return _results;
};

h = {
  getRand: function(min, max) {
    return Math.floor((Math.random() * ((max + 1) - min)) + min);
  }
};

windowHeight = $(window).outerHeight();

view.setViewSize($(window).outerWidth(), 300);

SSection = (function() {
  function SSection() {
    this.w = view.size.width;
    this.h = view.size.height;
    this.ph = 60;
    this.sh = this.procent(this.h, this.ph);
    this.wh = 1 * this.w;
    this.scrollSpeed = 0;
    this.gapSize = this.procent(this.h, (100 - this.ph) / 2);
    this.colors = ['#69d2e7', '#A7DBD8', '#E0E4CC', '#F38630', '#FA6900'];
    this.twns = [];
    this.makeBase();
    this.listenToStop();
  }

  SSection.prototype.listenToStop = function() {
    var _this = this;

    window.PaperSections.$container.on('scroll', function() {
      window.PaperSections.stop = false;
      return TWEEN.removeAll();
    });
    return window.PaperSections.$container.on('stopScroll', function() {
      var duration;

      window.PaperSections.stop = true;
      duration = window.PaperSections.slice(Math.abs(window.PaperSections.scrollSpeed * 25), 1400) || 3000;
      _this.translatePointY({
        point: _this.base.segments[1].handleOut,
        to: 0
      }).then(function() {
        return console.log('anim complete');
      });
      return _this.translatePointY({
        point: _this.base.segments[3].handleOut,
        to: 0
      });
    });
  };

  SSection.prototype.translatePointY = function(o) {
    var dfr, mTW,
      _this = this;

    dfr = new $.Deferred;
    mTW = new TWEEN.Tween(new Point(o.point)).to(new Point(o.to), o.duration);
    mTW.easing(o.easing || TWEEN.Easing.Elastic.Out);
    mTW.onUpdate(o.onUpdate || function(a) {
      return o.point.y = this.y;
    });
    mTW.onComplete(function() {
      return dfr.resolve();
    });
    mTW.start();
    return dfr.promise();
  };

  SSection.prototype.makeBase = function() {
    this.flattenSize = 25;
    this.base = new Path.Rectangle(new Point(0, this.procent(this.h, (100 - this.ph) / 2)), [this.wh, this.sh]);
    return this.base.fillColor = $(view.canvas).data().color;
  };

  SSection.prototype.toppie = function(amount) {
    this.base.segments[1].handleOut.y = amount;
    return this.base.segments[1].handleOut.x = this.wh / 2;
  };

  SSection.prototype.bottie = function(amount) {
    this.base.segments[3].handleOut.y = amount;
    return this.base.segments[3].handleOut.x = -this.wh / 2;
  };

  SSection.prototype.createPath = function(o) {
    var path;

    path = new Path(o.points);
    o.flatten && path.flatten(o.flatten);
    path.fillColor = o.fillColor || 'transparent';
    return path;
  };

  SSection.prototype.update = function() {
    if (!this.stop) {
      this.toppie(window.PaperSections.scrollSpeed);
      this.bottie(window.PaperSections.scrollSpeed);
    }
    return TWEEN.update();
  };

  SSection.prototype.procent = function(base, percents) {
    return (base / 100) * percents;
  };

  return SSection;

})();

section = new SSection;

onFrame = function(e) {
  return section.update();
};
